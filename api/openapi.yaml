# Electric Circuit Web OpenAPI Spec
openapi: 3.0.3
info:
  title: Electric Circuit Web API
  description: 전자 회로 설계 및 프로젝트 관리용 백엔드 API
  version: 1.0.0
servers:
  - url: http://localhost:8080/api
    description: Local development server
components:
  securitySchemes:
    firebaseAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        uid:
          type: string
        email:
          type: string
          format: email
        displayName:
          type: string
        photoURL:
          type: string
          format: uri
        emailVerified:
          type: boolean
      required: [uid, email]
    Project:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        user_id:
          type: string
        status:
          type: string
          enum: [active, archived, deleted]
        settings:
          type: object
          properties:
            grid_size:
              type: integer
            snap_to_grid:
              type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required: [id, name, user_id, status]
    Circuit:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        project_id:
          type: string
        user_id:
          type: string
        data:
          type: object
          properties:
            elements:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                  value:
                    type: string
                  position:
                    type: object
                    properties:
                      x:
                        type: number
                      y:
                        type: number
                    required: [x, y]
                required: [id, type, position]
            connections:
              type: array
              items:
                type: object
                properties:
                  from:
                    type: string
                  to:
                    type: string
                required: [from, to]
          required: [elements, connections]
        version:
          type: integer
        is_template:
          type: boolean
        tags:
          type: array
          items:
            type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required: [id, name, project_id, user_id, data]
    StorageFile:
      type: object
      properties:
        name:
          type: string
        path:
          type: string
        size:
          type: integer
        type:
          type: string
        url:
          type: string
          format: uri
        created_at:
          type: string
          format: date-time
      required: [name, path, size, type, url]
security:
  - firebaseAuth: []
paths:
  /health:
    get:
      summary: 서버 상태 확인
      responses:
        '200':
          description: 서버 상태
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
  /auth/verify:
    post:
      summary: Firebase ID 토큰 검증
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: 인증 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
  /projects:
    get:
      summary: 프로젝트 목록 조회
      security:
        - firebaseAuth: []
      responses:
        '200':
          description: 프로젝트 목록 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  projects:
                    type: array
                    items:
                      $ref: '#/components/schemas/Project'
    post:
      summary: 프로젝트 생성
      security:
        - firebaseAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '201':
          description: 생성된 프로젝트 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  project:
                    $ref: '#/components/schemas/Project'
  /circuits:
    get:
      summary: 회로 목록 조회
      security:
        - firebaseAuth: []
      responses:
        '200':
          description: 회로 목록 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  circuits:
                    type: array
                    items:
                      $ref: '#/components/schemas/Circuit'
    post:
      summary: 회로 생성
      security:
        - firebaseAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Circuit'
      responses:
        '201':
          description: 생성된 회로 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  circuit:
                    $ref: '#/components/schemas/Circuit'
  /storage/upload:
    post:
      summary: 파일 업로드
      security:
        - firebaseAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                folder:
                  type: string
      responses:
        '200':
          description: 파일 업로드 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  download_url:
                    type: string
                  file_path:
                    type: string
                  file_name:
                    type: string
                  size:
                    type: integer
  /storage/list:
    get:
      summary: 파일 목록 조회
      security:
        - firebaseAuth: []
      parameters:
        - name: folder
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 파일 목록 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  files:
                    type: array
                    items:
                      $ref: '#/components/schemas/StorageFile'
